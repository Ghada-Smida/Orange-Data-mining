<?xml version='1.0' encoding='utf-8'?>
<scheme description="" title="" version="2.0">
	<nodes>
		<node id="0" name="Twitter" position="(109.0, 140.0)" project_name="Orange3-Text" qualified_name="orangecontrib.text.widgets.owtwitter.OWTwitter" title="Twitter" version="" />
		<node id="1" name="Corpus Viewer" position="(239.0, 91.0)" project_name="Orange3-Text" qualified_name="orangecontrib.text.widgets.owcorpusviewer.OWCorpusViewer" title="Corpus Viewer" version="" />
		<node id="2" name="Word Cloud" position="(334.0, 246.0)" project_name="Orange3-Text" qualified_name="orangecontrib.text.widgets.owwordcloud.OWWordCloud" title="Word Cloud" version="" />
		<node id="3" name="Preprocess Text" position="(202.0, 203.5)" project_name="Orange3-Text" qualified_name="orangecontrib.text.widgets.owpreprocess.OWPreprocess" title="Preprocess Text" version="" />
	</nodes>
	<links>
		<link enabled="true" id="0" sink_channel="Corpus" sink_node_id="1" source_channel="Corpus" source_node_id="0" />
		<link enabled="true" id="1" sink_channel="Corpus" sink_node_id="3" source_channel="Corpus" source_node_id="0" />
		<link enabled="true" id="2" sink_channel="Corpus" sink_node_id="2" source_channel="Corpus" source_node_id="3" />
	</links>
	<annotations />
	<thumbnail />
	<node_properties>
		<properties format="literal" node_id="0">{'allow_retweets': False, 'collecting': False, 'controlAreaVisible': True, 'language': 'en', 'limited_search': True, 'max_tweets': 100, 'mode': 0, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x03\xc7\x00\x00\x00&lt;\x00\x00\x055\x00\x00\x02\x13\x00\x00\x03\xc8\x00\x00\x00[\x00\x00\x054\x00\x00\x02\x12\x00\x00\x00\x00\x00\x00\x00\x00\x05V\x00\x00\x03\xc8\x00\x00\x00[\x00\x00\x054\x00\x00\x02\x12', 'text_includes': ['Content'], 'word_list': ['#machinelearning'], '__version__': 1}</properties>
		<properties format="pickle" node_id="1">gASVW2EAAAAAAAB9lCiMCmF1dG9jb21taXSUiIwSY29udHJvbEFyZWFWaXNpYmxllIiME3NhdmVk
V2lkZ2V0R2VvbWV0cnmUQ0IB2dDLAAMAAAAAAkwAAABVAAAFKQAAAooAAAJNAAAAdAAABSgAAAKJ
AAAAAAAAAAAFVgAAAk0AAAB0AAAFKAAAAomUjAtzaG93X3Rva2Vuc5SJjAtfX3ZlcnNpb25fX5RL
AYwQY29udGV4dF9zZXR0aW5nc5RdlIwVb3Jhbmdld2lkZ2V0LnNldHRpbmdzlIwHQ29udGV4dJST
lCmBlH2UKIwGdmFsdWVzlH2UKIwQZGlzcGxheV9mZWF0dXJlc5RdlCiMB0NvbnRlbnSUS2eGlIwE
RGF0ZZRLaIaUjAhMYW5ndWFnZZRLZYaUjAhMb2NhdGlvbpRLZYaUjA9OdW1iZXIgb2YgTGlrZXOU
S2aGlIwSTnVtYmVyIG9mIFJldHdlZXRzlEtmhpSMC0luIFJlcGx5IFRvlEtlhpSMC0F1dGhvciBO
YW1llEtlhpSMEkF1dGhvciBEZXNjcmlwdGlvbpRLZ4aUjBVBdXRob3IgU3RhdHVzZXMgQ291bnSU
S2aGlIwXQXV0aG9yIEZhdm91cml0ZXMgQ291bnSUS2aGlIwUQXV0aG9yIEZyaWVuZHMgQ291bnSU
S2aGlIwWQXV0aG9yIEZvbGxvd2VycyBDb3VudJRLZoaUjBNBdXRob3IgTGlzdGVkIENvdW50lEtm
hpSMD0F1dGhvciBWZXJpZmllZJRLZYaUjAlMb25naXR1ZGWUS2aGlIwITGF0aXR1ZGWUS2aGlIwG
QXV0aG9ylEtlhpRlSv3///+GlIwPZGlzcGxheV9pbmRpY2VzlF2USwBhjA1yZWdleHBfZmlsdGVy
lIwAlEr/////hpSMDnNlYXJjaF9pbmRpY2VzlF2UKEsASwFLAksDSwRLBUsGSwdLCEsJSwpLC0sM
Sw1LDksPSxBLEWWMEnNlbGVjdGVkX2RvY3VtZW50c5SPlCiMmUFJIG1ha2luZyBpbnJvYWRzIGlu
IGZpbmFuY2lhbCBzZXJ2aWNlcyBzZWN0b3IsIGJ1dCBub3Qgd2l0aG91dCBkaWZmaWN1bHR5ICNM
ZWFybmluZyAjbWFjaGluZWxlYXJuaW5nIHZpYSBodHRwczovL3QuY28veXBZbVVuWThwQSBodHRw
czovL3QuY28vTUIwRllLOGJwa5RYFQEAAFRoZSBncmVhdGVzdCBjaGFsbGVuZ2UgZm9yIHRoZSBm
aW5hbmNpYWwgc2VydmljZXMgc2VjdG9yIGlzIHRvIHByb3ZpZGUgc2VydmljZXMgdGhhdCBwcm90
ZWN0IGV2ZXJ5b25lJ3MgaGVhbHRoIHdoaWxlIHNhdmluZyB2YWx1YWJsZSB0aW1lLiA3MCUgb2Yg
YWxsIGZpbmFuY2lhbCBzZXJ2aWNlcyB0ZWFtcyBhcmUgc29sdmluZyB0aGlzIHByb2JsZW0gdXNp
bmcgI21hY2hpbmVsZWFybmluZy4gaHR0cHM6Ly90LmNvL2IzczRoUHdWTTMKCiNjbG91ZGFjY291
bnRpbmcgI2F1dG9tYXRpb26UjKJXaGF0J3MgdGhlIGltcG9ydGFuY2Ugb2YgYW5hbHlzaXMgaW4g
YSBwcm9qZWN0IChidWlsZCBhbiBhcHBsaWNhdGlvbiBvciBhIHN5c3RlbSk/Pz8KI2FuYWx5c2lz
CiNzY2llbmNlY29tcHV0ZXIKI2J1aWxkYXBwbGljYXRpb24KI01hY2hpbmVMZWFybmluZyAKIzEw
MERheXNPZkNvZGWUjPJBIGZhc2NpbmF0aW5nIHBhcnQgb2YgI01hY2hpbmVMZWFybmluZyBpcyBo
b3cgbXVjaCBkZWNpbWFsIHByZWNpc2lvbiBjYW4gaW5mbHVlbmNlICNOZXVyYWxOZXR3b3Jrcy4g
CgpSZXNlYXJjaGVycyBhbmQgcHJhY3RpdGlvbmVycyBrbm93IHRoaXMsIGFuZCBidWlsZCBhbGdv
cml0aG1zIGFuZCBpbXBsZW1lbnRhdGlvbnMgYXJvdW5kIGl0LgoKSW4gc29tZSBjYXNlcywgaXQn
cyBhIGZvcm0gb2YgI3JlZ3VsYXJpemF0aW9uLpSMy0lubm92YXRpdmUgbWFjaGluZS1sZWFybmlu
ZyBhcHByb2FjaCBmb3IgZnV0dXJlIGRpYWdub3N0aWMgYWR2YW5jZXMgaW4gUGFya2luc29uJ3Mg
ZGlzZWFzZSAKCiNpbm5vdmF0aW9uICNBcnRpZmljaWFsSW50ZWxsaWdlbmNlICNNYWNoaW5lTGVh
cm5pbmcgI0hlYWx0aFRlY2ggI1BhcmtpbnNvbnMgI0hlYWx0aCAKCmh0dHBzOi8vdC5jby84cG9S
NmF0clg1lIzDQSBjcmVkZW50aWFsIGluICNNYWNoaW5lTGVhcm5pbmcgd2lsbCBibG93IHlvdXIg
ZWFybmluZyBwb3RlbnRpYWwgd2lkZSBvcGVuLiBMZWFybiBtb3JlOiBodHRwczovL3QuY28vZmV5
ajJDUG1teCAjWW9ya1VTQ1MgI0NlcnRpZmljYXRlICNBSWJ1c2luZXNzICNhcnRpZmljaWFsaW50
ZWxsaWdlbmNlIGh0dHBzOi8vdC5jby94cXFGTHhkbUFtlIyQVG9wIFRlY2huaWNhbCBhbmQgTm9u
LVRlY2huaWNhbCBTa2lsbHMgRXZlcnkgRGF0YSBTY2llbnRpc3QgTmVlZHMgI01hY2hpbmVMZWFy
bmluZyAjbGVhcm5pbmcgdmlhIGh0dHBzOi8vdC5jby9Ga1pxVVVSV2NHIGh0dHBzOi8vdC5jby9J
YUNuejlVellplIzXSXQgd2lsbCBjb21lIC0gRXRoaWNzIHJlZ3VsYXRvciBuZWVkZWQgZm9yIHRl
Y2hub2xvZ3kgaW5kdXN0cnksIHJlc2VhcmNoIGZpbmRzIGh0dHBzOi8vdC5jby9LSVcwdGREckdJ
ICNhaSAjQXJ0aWZpY2lhbEludGVsbGlnZW5jZSAjTWFjaGluZUxlYXJuaW5nICNkZWVwbGVhcm5p
bmcgI2V0aGljcyAjYWlldGhpY3MgI3JlZ3VsYXRpb24gaHR0cHM6Ly90LmNvL2VvbmVUVk12OTiU
jGJEYXRhYnJpY2tzIGxhdW5jaGVzIFNRTCBBbmFseXRpY3MgaHR0cHM6Ly90LmNvL0tMZDhjV1NU
eXEgI21hY2hpbmVsZWFybmluZyAjYXJ0aWZpY2lhbGludGVsbGlnZW5jZZSM/U91ciAiTUwgQmFz
aWNzIDE6IExpbmVhciBSZWdyZXNzaW9uIE1vZGVscyBXb3Jrc2hvcCIgd2lsbCBzdGFydCBpbiAy
IGhvdXJzLiBKb2luIHVzLiBodHRwczovL3QuY28veG0xaVJtbjRsaCAKCiNvbmxpbmUgI21hY2hp
bmVsZWFybmluZyAjbGluZWFycmVncmVzc2lvbiAjbGluZWFycmVncmVzc2lvbm1vZGVscyAjZGF0
YXByZXByb2Nlc3NpbmcgI2RhdGFzY2llbnRpc3QgI21hZ25pbWluZGFjYWRlbXkgaHR0cHM6Ly90
LmNvL0ZKS1ZveTBvTHOUWAcBAABVSyBnZW5lcmFsIHNheXMgYSBxdWFydGVyIG9mIHRoZSBhcm15
IGNvdWxkIGJlIHJvYm90cyBieSB0aGUgMjAzMHMgCgpSRUFEIE1PUkU6IGh0dHBzOi8vdC5jby9k
aXl3NEZwOFB1CgojQXV0b21hdGVkUHJvY2Vzc2VzICNBdXRvbWF0aW9uICNBdXRvbWF0aW9uVGVj
aG5vbG9neSAjRnV0dXJlICNHaWFudFJvYm90cyAjSHVtYW5zICNJbnRlbGxpZ2VudE1hY2hpbmVz
ICNKYXBhbiAjSm9icyAjTWFjaGluZUxlYXJuaW5nKiBodHRwczovL3QuY28vdE8yc3k0Z25HT5SM
m0hvdyBBSSBBbmQgVmlkZW8gQW5hbHl0aWNzIENhbiBSZXZvbHV0aW9uaXplIFV0aWxpdGllc+KA
mSBTZWN1cml0eSAjTWFjaGluZUxlYXJuaW5nICNsZWFybmluZyAjc2VjdXJpdHkgdmlhIGh0dHBz
Oi8vdC5jby9ORW83TGFua2JLIGh0dHBzOi8vdC5jby9PeFAycEViVlpllFgtAQAAWW91ciBAQXJt
eVJlc2VhcmNoTGFiIHJlc2VhcmNoZXJzIGNvbGxhYm9yYXRlIHdpdGggYWNhZGVtaWEgYXQgI1VT
QSBvbiBtYWNoaW5lIGxlYXJuaW5nIHRvIGlzb2xhdGUgcGF0dGVybnMgaW4gYnJhaW4gc2lnbmFs
cyEgVGhpcyBpcyBAVVNBcm15ICNNb2Rlcm5pemF0aW9uIGluIGFjdGlvbiEgQHVzYXJteWNjZGMg
QGFybXlmdXR1cmVzICNTY2llbmNlU2F2ZXNMaXZlcyAjTWFjaGluZUxlYXJuaW5nICNTY2llbmNl
QmVoaW5kVGhlU29sZGllciAK8J+HuvCfh7jinaTvuI/wn4e68J+HuCBodHRwczovL3QuY28veHIw
bmkyU3JUTJRYKAEAAEZyb20gcmVzZWFyY2ggdG8gcHJvZHVjdGlvbjogc2NhbGluZyBhIHN0YXRl
IG9mIHRoZSBhcnQgbWFjaGluZSBsZWFybmluZyBzeXN0ZW0KQnkgQFREYXRhU2NpZW5jZSAKI0Jp
Z2RhdGEgI0FJICNOTFAgI0FydGlmaWNpYWxJbnRlbGxpZ2VuY2UgI01hY2hpbmVMZWFybmluZwpD
YzogQGFuZGlfc3RhdWIgQG5pZ2V3aWxsc29uIEBpcGZjb25saW5lMSBATmljb2NoYW4zMwpAamJs
ZWZldnJlNjAgQHJ3YW5nMCBAc2ViYm91cmd1aWdub24KCmh0dHBzOi8vdC5jby85bjFhbkxORDNl
IGh0dHBzOi8vdC5jby9VTDBPV0p4NUFMlIx8RGF0YSBhbmQgQW5hbHl0aWNzIGh0dHBzOi8vdC5j
by9HcHVxSmZJMzNUIAoKQ3Jvc3N3b3JkIHB1enpsZSBhbnlvbmU/CgojZWR1Y2F0aW9uICNEYXRh
QW5hbHl0aWNzICNBbmFseXRpY3MgI01hY2hpbmVMZWFybmluZ5SMXkVzc2VudGlhbCBkYXRhIHNj
aWVuY2Ugc2tpbGxzIHRoYXQgbm8gb25lIHRhbGtzIGFib3V0ICNtYWNoaW5lbGVhcm5pbmcgaHR0
cHM6Ly90LmNvL2dzcEZaR2dnZ3eUjKbigJxUaGUgZWZmZWN0aXZlbmVzcyBvZiBtYWNoaW5lIGxl
YXJuaW5nIGRlcGVuZHMgb24gdGhlIHF1YWxpdHkgb2YgdGhlIGRhdGEuIExvdy1xdWFsaXR5IGRh
dGEgd2lsbCBwcm9kdWNlIHRoZSB3b3JzdCByZXN1bHRzLuKAnSAjTWFjaGluZUxlYXJuaW5nRmFj
dCAjTWFjaGluZUxlYXJuaW5nlFguAQAAQmVhcklEIC0gQ29vbCAjTWFjaGluZUxlYXJuaW5nIGV4
YW1wbGUgZnJvbSBkZXRlY3RpbmcgYW5kIElEaW5nICNBbGFza2EgYmVhciBmYWNlcy4gVGhleSB3
ZXJlIGFibGUgdG8gbGV2ZXJhZ2UgRG9nIEhpcHN0ZXJpemVyIGNvZGUgdG8gZ2V0IGEgaGVhZCBz
dGFydCwgc29tZXRoaW5nIEkgb2JzZXJ2ZWQgd29ya2luZyBvbiBpbWFnZSBjb21wcmVzc2lvbiB3
L2RpZmYuIGltYWdlIHNldHMuIEJUVyBAbnl0aW1lcyBBbGEuID0gQWxhYmFtYSBub3QgQWxhc2th
LiAjQmVhcnMgQGludG9fQUkgaHR0cHM6Ly90LmNvL0EwMGU2SG1PYzWUWC4BAABUaGUgV2hhdCwg
V2h5LCBhbmQgSG93IG9mICNIeWJyaWRDbG91ZApodHRwczovL3QuY28vN0RLczZpOUw0SiB2aWEg
QGluZ2xpZ3VvcmkgI0RpZ2l0YWxUcmFuc2Zvcm1hdGlvbiAjTWFjaGluZUxlYXJuaW5nICNCaWdE
YXRhICNjeWJlcnNlY3VyaXR5ICNCbG9ja2NoYWluICNEWCAjQW5hbHl0aWNzICNJbmR1c3RyeTQw
ICNBSSAjSUlvVCAjSW9UICNEYXRhU2NpZW50aXN0ICNIZWFsdGhUZWNoICNzdGFydHVwICNEZXZP
cHMgI0lUT3BzIEBhbnRncmFzc28gQHBpZXJyZXBpbm5hIEBBa3d5WiBodHRwczovL3QuY28vTkdr
M0phaWdDOZSMak1hY2hpbmUgTGVhcm5pbmcgaW4gYSBOdXRzaGVsbCAjTWFjaGluZUxlYXJuaW5n
ICNhcnRpZmljaWFsaW50ZWxsaWdlbmNlICNsZWFybmluZyAgaHR0cHM6Ly90LmNvL0gyakF0ZnV5
TE+UWBIBAAAjVGVjaG5vQ29vbDogQUkgcmVzZWFyY2ggZmluZHMgYSDigJhjb21wdXRlIGRpdmlk
ZeKAmSBjb25jZW50cmF0ZXMgcG93ZXIgYW5kIGFjY2VsZXJhdGVzIGluZXF1YWxpdHkgaW4gdGhl
IGVyYSBvZiBkZWVwIGxlYXJuaW5nIC0gVmVudHVyZUJlYXQKCiN0ZWNoICN0ZWNobm9sb2d5ICNk
YXRhc2NpZW5jZSAjbmV1cmFsbmV0d29ya3MgI2FpICNtbCAjbWFjaGluZWxlYXJuaW5nICNkZWVw
bGVhcm5pbmcgI2FnaQoKUmVhZCBNb3JlIEhlcmU6Cmh0dHBzOi8vdC5jby9wWUNxMmdhMVI3lFgK
AQAAUHJlcGFyaW5nIGZvciBhIGJhY2tlbmQgI01MIGVuZ2luZWVyIHBvc2l0aW9uPwpMYXRlc3Qg
YXJ0aWNsZTogSG93IHRvIHVzZSB1V1NHSSBhbmQgTmdpbnggdG8gc2VydmUgYSAjRGVlcExlYXJu
aW5nIG1vZGVsCkludGVyZXN0ZWQ/IFJlYWQgb24gYW5kIGZpbmQgb3V0IQojbWFjaGluZWxlYXJu
aW5nICNEYXRhU2NpZW5jZSBAVGVuc29yRmxvdyBAbWFjaGluZWxlYXJuZmx4IEBtX2xlYXJuaW5n
bmV3cyBAbWFkZXdpdGhtbCAKaHR0cHM6Ly90LmNvL1VvSEhrbEk4dFiUjI1Ib3cgVGhlIEZ1dHVy
ZSBPZiBEZWVwIExlYXJuaW5nIENvdWxkIFJlc2VtYmxlIFRoZSBIdW1hbiBCcmFpbiAjTWFjaGlu
ZUxlYXJuaW5nICNsZWFybmluZyB2aWEgaHR0cHM6Ly90LmNvL2twRjZjdHlianYgaHR0cHM6Ly90
LmNvL1NIWEJiaVo1WHKUjMJXZSdyZSBjdXJpb3VzOiBIb3cgaGFzIHlvdXIgZXhwZXJpZW5jZSBi
ZWVuIHdpdGggdmlydHVhbCBjb25mZXJlbmNlcyB0aGlzIHllYXI/IAoKI2N5YmVyc2VjdXJpdHkg
I3NlY3VyaXR5ICNjb25mZXJlbmNlICN0ZWNoICNpbmZvc2VjICNiaWdkYXRhICNhbmFseXRpY3Mg
I21hY2hpbmVsZWFybmluZyBodHRwczovL3QuY28velZJa1VaNVdicpSMyElubm92YXRpdmUgbWFj
aGluZS1sZWFybmluZyBhcHByb2FjaCBmb3IgZnV0dXJlIGRpYWdub3N0aWMgYWR2YW5jZXMgaW4g
UGFya2luc29u4oCZcyBkaXNlYXNlIAoKUkVBRCBNT1JFOiBodHRwczovL3QuY28vbFlGNmNKYWtS
bgoKI0FJICNhbGdvcml0aG0gI0RlZXBMZWFybmluZyAjTWFjaGluZUxlYXJuaW5nIGh0dHBzOi8v
dC5jby9BUENoZkZlbDJOlFgKAQAAT3VyIENocmlzdG1hcyBldmVudCAoQUdNKSBpcyBub3cgb3Bl
biBmb3IgcmVnaXN0cmF0aW9uLiBXaGF0J3MgaW4gYSBuYW1lOiBTdGF0aXN0aWNzIHZzIERhdGEg
U2NpZW5jZSBpcyBmZWF0dXJpbmcgQFJvYkh1ZyBhbmQgQFZpbm55X0Rhdmllczg5LiBNYWtlIHN1
cmUgdG8gYm9vayB5b3VyIHRpY2tldHMgZWFybHkhICNSU1NHbGFXaGF0c0luQU5hbWUgI1N0YXRz
ICNEYXRhU2NpZW5jZSAjQUkgI01hY2hpbmVMZWFybmluZyAKaHR0cHM6Ly90LmNvLzJPenZkSGVR
VGuUjOxBIEJyaWVmIEhpc3Rvcnkgb2YgTWFjaGluZSBMZWFybmluZyAKCiNEaWdpdGFsVHJhbnNm
b3JtYXRpb24gI01hY2hpbmVMZWFybmluZyAjQmlnRGF0YSAjQXJ0aWZpY2lhbEludGVsbGlnZW5j
ZSAjY3liZXJzZWN1cml0eSAjQmxvY2tjaGFpbiAjQW5hbHl0aWNzICNJbmR1c3RyeTQwICNBSSAj
SUlvVCAjRGF0YVNjaWVuY2UgI0lvVApodHRwczovL3QuY28vYlhTdXRYMVVBUiBodHRwczovL3Qu
Y28veVlUbW54cHlKTZRYHQEAACJXaG8gd291bGQgaGF2ZSB0aG91Z2h0IHRoYXQgY29tcHV0ZXJz
IGNvdWxkIHJlY29nbml6ZSBhbmQgbGVhcm4gcGF0dGVybnMgdG8gZGVjaWRlIGZvciB0aGVtc2Vs
dmVzPyBUaGUgc2FtZSBnb2VzIGZvciB0aGUgZmllbGQgb2YgZUNvbW1lcmNlLiAgTm9ib2R5IGNv
dWxkIGhhdmUgaW1hZ2luZWQgaXQgd291bGQgYmUgd2hhdCBpdCBpcyBub3cuIgoKaHR0cHM6Ly90
LmNvL0c3ekhkRW5melAKCiNlQ29tbWVyY2UgI01hY2hpbmVMZWFybmluZyAjQmlnRGF0YSBodHRw
czovL3QuY28vTEFpRlluWVlTRZRYCAEAAE5ldyBwcmVwcmludCBvdXQgb24gI0NOTiwgaXRlcmF0
aXZlIGxlYXJuaW5nICZhbXA7IGxhbmd1YWdlIGNoYW5nZS4gCgpodHRwczovL3QuY28vQmVaTWts
cW1GeQoKQ2FuIHdlIG1vZGVsIGN1bHR1cmFsIGV2b2x1dGlvbiBvZiBsYW5ndWFnZSB3aXRoIGRl
ZXAgY29udm9sdXRpb25hbCBuZXRzPwoKI05MUHJvYyAjc3BlZWNoICNBSSAjRGVlcExlYXJuaW5n
ICNNYWNoaW5lTGVhcm5pbmcgI1NvdW5kICNMaW5ndWlzdGljcyBodHRwczovL3QuY28va0hldFVY
d09jd5SM21RoaXMgaXMgaG93ICNBSSBpcyBhY2NlbGVyYXRpbmcgdGhlICN2YWNjaW5lICNyZXNl
YXJjaCAKI0FydGlmaWNpYWxJbnRlbGxpZ2VuY2UgI0FsZ29yaXRobSAjTUwgI01hY2hpbmVMZWFy
bmluZyAjRGVlcExlYXJuaW5nICNETCAjTmV1cmFsTmV0d29ya3MgI0RhdGEgI1RlY2ggI1RlY2hu
b2xvZ3kgCgpodHRwczovL3QuY28vWVo2OHdNMGNUUCBodHRwczovL3QuY28vMjZ4Yk9qdzRkcZSM
+091ciBEZWxsIHByZWNpc2lvbiB3b3Jrc3RhdGlvbnMgZGVsaXZlciB0aGUgcG93ZXIgdG8gZGVw
bG95IGFuZCBtYW5hZ2UgY29nbml0aXZlIHRlY2hub2xvZ3kgcGxhdGZvcm1zLCBpbmNsdWRpbmcg
I01hY2hpbmVMZWFybmluZyAoTUwpLCAjQXJ0aWZpY2lhbEludGVsbGlnZW5jZSAoQUkpIGFuZCAj
RGVlcExlYXJuaW5nIChETCkuICAKClRydXN0IFVzIFRvIERlbGl2ZXIgRXhjZWxsZW5jZSDwn5iN
IGh0dHBzOi8vdC5jby9FeFMxWTk2bmcylFgnAQAAU2lnbiB1cCBmb3Igb3VyIHdlYmluYXIsIGhv
c3RlZCBieSBvdXIgY28tZm91bmRlcgpDaHJpcyBWYW4gUGVsdDogaHR0cHM6Ly90LmNvL1lJaFNO
SENhcVEKCkhl4oCZbGwgdGFsayBhYm91dCB0aGUgc3RhdGUtb2YtYXJ0IHRvb2xzIGZvciBkYXRh
c2V0IGFuZCBtb2RlbCB2ZXJzaW9uaW5nLgoKI1dhbmRCICNSZXByb2R1Y2liaWxpdHkgI01hY2hp
bmVMZWFybmluZyAjQXJ0aWZpY2lhbEludGVsbGlnZW5jZSAjRGVlcExlYXJuaW5nICNNTCAjQUkg
I0RMICNEYXRhU2NpZW5jZSBodHRwczovL3QuY28vSVJ3WmtObzFIS5SMf0hvdyB0byBCdWlsZCBh
IFR3aXR0ZXIgU2VudGltZW50IEFuYWx5c2lzIFN5c3RlbSAjTGVhcm5pbmcgI21hY2hpbmVsZWFy
bmluZyB2aWEgaHR0cHM6Ly90LmNvLzdXekxvSUpQbFkgaHR0cHM6Ly90LmNvL0hQd21qTDZ4bE+U
WDIBAABLTFNUIEFJIGNvbnN1bHRpbmcgc2VydmljZXMgYmxlbmRzIGRlZXAgZXhwZXJ0aXNlIGlu
ICNNaWNyb3NvZnQgI0F6dXJlICNCb3RGcmFtZXdvcmssICNBenVyZSAjbWFjaGluZWxlYXJuaW5n
LCBBenVyZSBDb2duaXRpdmUgU2VydmljZXMsIGFuZCBBenVyZSAjSW50ZXJuZXRvZlRoaW5ncyAo
SW9UKSBTdWl0ZSB0byBkZXZlbG9wIOKAnGludGVsbGlnZW504oCdICNhcHBzLgpodHRwczovL3Qu
Y28vT2JESGU3UTZZTgojZG9jdXNpZ24gI2FwcCAjYmxvY2tjaGFpbiAjY29udGVudCAjYWkgI2Jv
dHMgaHR0cHM6Ly90LmNvL0N1bkQ2aFU5YWGUjPVJdCBpcyBpbXBvcnRhbnQgdG8gYmUgdXAgdG9k
YXkgb24gaG93IEludGVsIGFkZHMgdmFsdWUgaW50byB0aGUgZ3Jvd2luZyB3b3JsZCBvZiAjbWFj
aGluZWxlYXJuaW5nIHRvd2FyZHMgdGhlIGFkb3B0aW9uIG9mICNJQSBub3Qgb25seSBpbiB0aGUg
I2RhdGFjZW50ZXIgYnV0IGFsc28gb24gdGhlICNjbG91ZCBzdWNoIGFzIEFtYXpvbiBXZWIgU2Vy
dmljZXMgKEFXUykuICNJYW1JbnRlbCBodHRwczovL3QuY28vRnF3RThDZDlwVZRYKQEAAEEgZ3Jl
YXQgY3VzdG9tZXIgZXhwZXJpZW5jZSBhbHdheXMgd2lucyAjcmV0YWlsICNyZXRhaWxsaWZlICNy
ZXRhaWxlciAjcmV0YWlsdGVjaCAjcmV0YWlsYWkgI2FydGlmaWNpYWxpbnRlbGxpZ2VuY2UgI2Fp
ICNtYWNoaW5lbGVhcm5pbmcgI21sICNyZWNvbW1lbmRlZCAjcmVjb21tZW5kYXRpb24gI3JlY29t
bWVuZGF0aW9uc3lzdGVtICNwZXJzb25hbGl6YXRpb24gI2Vjb21tZXJjZSAjZWNvbW1lcmNldGVj
aCAjZWNvbW1lcmNlYWkgI2Vjb21tZXJjZXBlcnNvbmFsaXphdGlvbiBodHRwczovL3QuY28vOW5i
dEhjMWp5ZpSM5VRoZSBDb29sZXN0IENhciBUZWNobm9sb2d5IGluIE91ciBGdXR1cmUgLSBDb3J1
emFudCBUZWNoIGh0dHBzOi8vdC5jby9aWU1jUmNSVElZICNBdXRvbm9tb3VzRHJpdmluZyAjQXV0
b25vbW91c0NhcnMgI0FJICNTYWZldHkgI0NhcnMgI1Zpc2lvbiAjSW5ub3ZhdGlvbiAjQ2FyTWFu
dWZhY3R1cmluZyAjRW1lcmdpbmdUZWNoICNUZWNobm9sb2d5ICNNYWNoaW5lTGVhcm5pbmcgI0Z1
dHVyaXNtICNDVE+UjKIjRGV2U2VjT3BzIGFueW9uZT8gCgogI0JpZ0RhdGEgI0FuYWx5dGljcyAj
QkkgI0RhdGFTY2llbmNlICNNYWNoaW5lTGVhcm5pbmcgI0RlZXBMZWFybmluZyAjRGlnaXRhbFRy
YW5zZm9ybWF0aW9uICNBSVN0cmF0ZWd5ICNNTE9wcyAjQUlPcHMgaHR0cHM6Ly90LmNvL2g5dHJO
ckZvZnmUjF1TdWJzY3JpYmUgdG8gcmVhZCAjQXJ0aWZpY2lhbEludGVsbGlnZW5jZSAjbGVhcm5p
bmcgI21hY2hpbmVsZWFybmluZyAgaHR0cHM6Ly90LmNvLzNPTkdHa3JuY2GUWCcBAABOZXRmbGl4
IHNhdmVkICQxIGJpbGxpb24gaW4gMjAxNyBieSB1c2luZyBtYWNoaW5lIGxlYXJuaW5nIHRvIG1h
a2UgcGVyc29uYWxpc2VkIHJlY29tbWVuZGF0aW9ucy4KTmV0ZmxpeCBoYXMgcmVkdWNlZCB0aGUg
bnVtYmVyIG9mIHBlb3BsZSBzd2l0Y2hpbmcgdG8gcml2YWxzIGJ5IGltcHJvdmluZyB0aGUgcXVh
bGl0eSBvZiBpdHMgcmVjb21tZW5kYXRpb25zLCBhY2NvcmRpbmcgdG8gU3RhdHdvbGYuCgojQXJ0
aWZpY2lhbEludGVsbGlnZW5jZSAjTWFjaGluZUxlYXJuaW5nIGh0dHBzOi8vdC5jby9yclRYNnVl
cnB3lFgaAQAAMjAyMTogQ2hpbmEgV2lsbCBSZWFjaCBUaHJlc2hvbGQgb2YgMjAlIG9mIE1vYmls
ZSBVc2VycyBIYXZpbmcgIzVHIQpBY2NlcHRhdGlvbiBvZiA1RyBXaWxsIEZ1cnRoZXIgQWNjZWxl
cmF0ZQpieSBSeWFuIERpbmcgfCAKCiNIdWF3ZWlQYXJ0bmVyICNIV01CQkYgQEh1YXdlaSBASHVh
d2VpQ2FycmllciAjNUcgI0FJICNNYWNoaW5lTGVhcm5pbmcKCkNjOiBAY3JhaWdicm93bnBoZCBA
V2lsbFRvd25UZWNoIEBhbHRvbGFicyBAam9zZWNhcmxvc3RlY25vIGh0dHBzOi8vdC5jby92ZHZq
QnV3Y1VUlIzGVGhlIG9mZmljZSBvZiAyMDMwOiBIb3cgb3VyIHdvcmtwbGFjZSB3aWxsIGNoYW5n
ZSBpbiBuZXh0IDEwIHllYXJzIGh0dHBzOi8vdC5jby9EQ2lMSGd1emZuICNhaSAjQXJ0aWZpY2lh
bEludGVsbGlnZW5jZSAjTWFjaGluZUxlYXJuaW5nICNkZWVwbGVhcm5pbmcgI2Z1dHVyZW9md29y
ayAjd29ya3BsYWNlIGh0dHBzOi8vdC5jby82dThzeDFXN2E1lFgnAQAAI0FiZXJkZWVuIGJvdW5k
IGFmdGVyIGEgc3VjY2Vzc2Z1bCBAbWFyaW5lc2NvdGxhbmQgQHNtYXJ0ZmlzaGgyMDIwIGNydWlz
ZSwgYWJseSBvcmdhbmlzZWQgYW5kIGxlZCBieSBAc3RyYWFfaG9sYWguIFdldmUgYmVlbiB0ZXN0
aW5nIG5ldyBjYW1lcmEgYW5kICNNYWNoaW5lTGVhcm5pbmcgdGVjaG5vbG9naWVzIGRldmVsb3Bl
ZCBieSB0aGUgcHJvamVjdCBpbiBOb3J0aCBTZWEgZGVtZXJzYWwgYW5kIHNjYWxsb3AgZmlzaGVy
aWVzLiBTdGF5IHR1bmVkIGZvciByZXN1bHRzISBodHRwczovL3QuY28vVFFYV2lGaGFudpSM21Bv
d2VyIHlvdXIgI0NSTSBzb2Z0d2FyZSB3aXRoICNEYXRhSW50ZWxsaWdlbmNlIGFuZCBnYWluIGRl
ZXAgaW5zaWdodHMgb24gI2RlbWFuZGZvcmVjYXN0aW5nLCBjdXN0b21lciBlbmdhZ2VtZW50LCBl
dGMuIEJvb2sgYSBkZW1vIEAgaHR0cHM6Ly90LmNvL0VkcjREQjZ6TnEgI0FydGlmaWNpYWxJbnRl
bGxpZ2VuY2UgI3NhbGVzICNNYWNoaW5lTGVhcm5pbmcgI0RlZXBMZWFybmluZ5SM/yJUaGUgY2hp
ZWYgZGF0YSBvZmZpY2VyIChDRE8pIHJvbGUgaGFzIHJhcGlkbHkgZXZvbHZlZCBvdmVyIHRoZSBw
YXN0IGZldyB5ZWFycywgZnJvbSBiZWluZyBhIGdvdmVybmFuY2UgbGVhZGVyIHRvIGRhdGEgc2Np
ZW5jZSBhbmQgQUkgZXhwZXJ0IHRvIGRpZ2l0YWwgdHJhbnNmb3JtYXRpb24gbGVhZGVyLiIKCmh0
dHBzOi8vdC5jby9rME96SUhpWFJaCgojQ0RPICNBSSAjTWFjaGluZUxlYXJuaW5nICNEYXRhRHJp
dmVuICNTa2lsbHMgI1RhbGVudJRYGgEAAFRoZSBEYXRhIFNjaWVuY2UvTWFjaGluZSBMZWFybmlu
ZyBEaWxlbW1hCnsgYnkgQE9tb0FiZHVsMSB9IGZyb20gQGhhc2hub2RlIAoKRmlyc3QgYXJ0aWNs
ZSBvbiBoYXNobm9kZS4gRG8gdGVsbCBtZSB3aGF0IHlvdSB0aGlua/CfmYLwn5iMCgojMTAwRGF5
c09mTUxDb2RlICAjMTAwRGF5c09mQ29kZSAKCiNkYXRhc2NpZW5jZSAjYnVzaW5lc3NpbnRlbGxp
bmdlbmNlICNhcnRpZmljaWFsaW50ZWxsaWdlbmNlICNweXRob24gI21hY2hpbmVsZWFybmluZyBo
dHRwczovL3QuY28vY3JpQTFBUHRmcJSM4CNBcnRpZmljaWFsSW50ZWxsaWdlbmNlICgjQUkpIOKA
lCBUb3AgVXNlIENhc2VzIGFuZCBUZWNobm9sb2dpZXMgVXNlZCBUb2RheQoKI0RpZ2l0YWxUcmFu
c2Zvcm1hdGlvbiAjQ2xvdWQgI01hY2hpbmVMZWFybmluZyAjQmlnRGF0YSAjY3liZXJzZWN1cml0
eSAjQW5hbHl0aWNzICNEYXRhU2NpZW5jZSAjSW9UCmh0dHBzOi8vdC5jby9YRVdtNkVwN09OIGh0
dHBzOi8vdC5jby9XRk1UT3o2MkZylIxlR2xvYmFsIEdEUCB3aWxsIGdyb3cgYnkgJDE1LjcgdHJp
bGxpb24gYnkgMjAzMCB0aGFua3MgdG8gQUkuCiNBcnRpZmljaWFsSW50ZWxsaWdlbmNlICNNYWNo
aW5lTGVhcm5pbmeUjHlZZXMsIGl0IGludGVybmFsbHkgZW1wbG95ZXMgdGhlIGNvbmNlcHQgb2Yg
bWFjaGluZSBsZWFybmluZyBpbiBvcmRlciB0byBtb3JwaCB5b3UgaW50byB5b3VyIGZ1dHVyZSBz
ZWxmLiAjTWFjaGluZUxlYXJuaW5nlFgfAQAAT3VyIHBhbmVsIG9mIGV4cGVydHMgaXMgbGl2ZSBv
biBzdGFnZSBub3cgYXQgdGhpcyBRdWFudCBJbnNpZ2h0cyBDb25mZXJlbmNlIGRpc2N1c3Npbmcg
J0FnZW50cyBQcm92b2NhdGV1cnM6IFF1YW50IEZpbmFuY2UncyBOZXh0IEV2b2x1dGlvbiBNdXN0
IEluY29ycG9yYXRlIEFnZW50IEJhc2VkIE1vZGVsaW5nJwoKI1FJT25saW5lMjAyMCAjQ1FGICNx
dWFudHMgI3F1YW50aXRhdGl2ZWZpbmFuY2UgI2ZpbmFuY2UgI21vZGVsaW5nICNtYWNoaW5lbGVh
cm5pbmcgaHR0cHM6Ly90LmNvL3VMdVBWZ1BMMHqUjGlTdXBlciBFYXN5IFB5dGhvbiAjTWFjaGlu
ZUxlYXJuaW5nICNiaWdkYXRhICNsZWFybmluZyB2aWEgaHR0cHM6Ly90LmNvL2twRjZjdHlianYg
aHR0cHM6Ly90LmNvL2pCZnhEN3hOaHGUjExOZXcgdG9wIHBvc3Qgb24gL3IvTWFjaGluZUxlYXJu
aW5nISBodHRwczovL3QuY28vMjBZSUxlU2ZuayAjTWFjaGluZUxlYXJuaW5nlIycTWFjaGluZSBM
ZWFybmluZyBJbnRlcnZpZXcgUXVlc3Rpb25zIHwgTWFjaGluZSBMZWFybmluZyBJbnRlcnZpZXcg
UHJlcGFyYXRpb24KCuKYniBodHRwczovL3QuY28venVUWWxiZ3k4NQoKI01hY2hpbmVMZWFybmlu
ZyAjTW9yaW9oIGh0dHBzOi8vdC5jby93MkowVmhvaHRslFgUAQAARXhjaXRpbmcgb3Bwb3J0dW5p
dGllcyB0byBqb2luIG91ciByZXNlYXJjaCBncm91cCBmb3IgYSBQaEQuIEEgcG9zaXRpb24gaW4g
cHJvYmFiaWxpc3RpYyAjTWFjaGluZUxlYXJuaW5nIGFjY2VsZXJhdGlvbiAoY29sbGFib3JhdGlv
biB3aXRoIEFybSksIGFuZCBhIHBvc2l0aW9uIG9uIGRlc2lnbmluZyBjb21wdXRlciBhcmNoaXRl
Y3R1cmVzIGZvciBuZXh0IGdlbmVyYXRpb24gcm9ib3RpY3MgKGNvbGxhYm9yYXRpb24gd2l0aCBE
eXNvbikuIGh0dHBzOi8vdC5jby95cTFlUUFtWEJUlIzDI01hY2hpbmVMZWFybmluZyBoYXMgbG90
cyBvZiB1c2VzIGFuZCBvbmUgb2YgdGhvc2UgdXNlcyBpcyBGcmF1ZHVsZW50IENoZWNrIERldGVj
dGlvbi4gT3VyIE1MIEVuZ2luZWVyIEFuY2hhbCBleHBsYWlucyBob3cgT25lLVNob3QgbGVhcm5p
bmcgY2FuIGJlIHVzZWQgaW4gI0ZyYXVkRGV0ZWN0aW9uCmh0dHBzOi8vdC5jby9zTmNraENvdklX
lFguAQAAQ2FuIEFydGlmaWNpYWwgSW50ZWxsaWdlbmNlIE1ha2UgSHVtYW4gQ29ubmVjdGlvbnMg
RGVlcGVyPwpCeSBAQW5hbHl0aWNzaW5kaWFtCiNBSSAjQ1RPICNDSU9zICNGdXR1cmVvZndvcmsg
I01hY2hpbmVMZWFybmluZyAgI0FydGlmaWNpYWxJbnRlbGxpZ2VuY2UKQ2M6IEBKdWxlel9Ob3J0
b24gQERySkRyb29naGFhZyBASGFuYV9FbFNheXllZCBAbXZvbGxtZXIxCkBKb2xhQnVybmV0dCBA
ZGVicmFydWggQGpibGVmZXZyZTYwIEBrYWx5ZGVvbwoKaHR0cHM6Ly90LmNvL1FUMkxUeFp3VTMg
aHR0cHM6Ly90LmNvL2VacFlvM2JvUGuUWBYBAAAxMCBIb3R0ZXN0IFRyZW5kcyBpbiAjRGF0YSBh
bmQgI0FuYWx5dGljcyB0aGF0IFdpbGwgRGlzcnVwdCBZb3VyICNCdXNpbmVzczoKLSBDb21tZXJj
aWFsICNBSSBhbmQgTUwKLSAjQmxvY2tjaGFpbgotIEdyYXBocwotIENvbnZlcnNhdGlvbmFsIEFu
YWx5dGljcwotIC4uLgoKI0RhdGFBbmFseXRpY3MgI0FydGlmaWNpYWxJbnRlbGxpZ2VuY2UgI0Js
b2NoY2hhaW5UZWNobm9sb2d5ICNNYWNoaW5lTGVhcm5pbmcKClZpYSBAQmVsYW5pR2F1cmF2Cgpo
dHRwczovL3QuY28vUEZJeTdrS3J4QpSMak1hY2hpbmUgTGVhcm5pbmcgaW4gYSBOdXRzaGVsbCAj
QXJ0aWZpY2lhbEludGVsbGlnZW5jZSAjbGVhcm5pbmcgI21hY2hpbmVsZWFybmluZyAgaHR0cHM6
Ly90LmNvL2NmS0ZhSnF4V0KUjJRMaXZlOiBKb2luIGRpc2N1c3Npb24gdy8gQFJvc2FsaW5kUGlj
YXJkIEBMRmVsZG1hbkJhcnJldHQgI0FmZmVjdGl2ZUNvbXB1dGluZyAjTWFjaGluZUxlYXJuaW5n
ICNBUEFUZWNoMjAgI0ZhY2lhbFJlY29nbml0aW9uIGh0dHBzOi8vdC5jby9IcG5odmIxckdqlFgB
AQAAMzAwLDAwMCBsaW5lcyBvZiBwZXJmb3JtYW5jZSB0ZXN0IGRhdGEgY2FuIGJlIGludGltaWRh
dGluZy4gQGp1bGlvZGVsaW1hcyBzaGFyZXMgYSB3YXkgdG8gdXNlICNtYWNoaW5lbGVhcm5pbmcg
dG8gcmVkdWNlIHRoZSBzY29wZSBvZiBsb2FkIHRlc3RpbmcgYW5kIGdldCBtZWFuaW5nZnVsIGFu
YWx5c2lzIGZyb20geW91ciBkYXRhIGZhc3RlciBpbiB0aGUgbGF0ZXN0ICNRdWFsaXR5U2Vuc2Ug
ZXBpc29kZSEgaHR0cHM6Ly90LmNvL2JXUVNGaWRSZU2UjF1TdWJzY3JpYmUgdG8gcmVhZCAjQXJ0
aWZpY2lhbEludGVsbGlnZW5jZSAjbGVhcm5pbmcgI21hY2hpbmVsZWFybmluZyAgaHR0cHM6Ly90
LmNvL3dLaUlmYWFsRUKUjNVNYWtlIHRoZSBoaXJpbmcgcHJvY2VzcyBlZmZvcnRsZXNzLiBGaW5k
IG91dCBob3cgb3VyIHNlYXJjaCBhbmQgbWF0Y2ggZW5naW5lIGNhbiBoZWxwIHlvdSBzYXZlIHRp
bWUgYW5kIHJlc291cmNlcz8KaHR0cHM6Ly90LmNvL0dNaFFXS0g0dEMKI2FpICNtYWNoaW5lbGVh
cm5pbmcgI3JlY3J1aXRtZW50ICNyZWNydWl0aW5nICNhdXRvbWF0aW9uICMjU2VtYW50aWNTZWFy
Y2iUWBkBAAAjSW50ZWxsaWdlbnRBdXRvbWF0aW9uIHRvIEF1Z21lbnQgUGVvcGxlLCBSZWZvY3Vz
ICNFbXBsb3llZXMgJmFtcDsgU2F2ZSBMaXZlcyIKCldhdGNoIE5vdyAjc2F1Z2F0YWxrcyB3aXRo
IEBwYXNjYWxfYm9ybmV0OiAgaHR0cHM6Ly90LmNvLzV5ZXdpMnlkc0ogCgojaW50ZWxsaWdlbnRh
dXRvbWF0aW9uICNhdXRvbWF0aW9uICN0ZWNobm9sb2d5ICNBcnRpZmljaWFsSW50ZWxsaWdlbmNl
ICNtYWNoaW5lbGVhcm5pbmcgI0FJwqAjaW5ub3ZhdGlvbiAjVGVjaEZvckdvb2QgI2Z1dHVyZW9m
d29ya5SM2lJNREw6IFJhbmRvbSBNdWx0aW1vZGVsIERlZXAgTGVhcm5pbmcgZm9yIENsYXNzaWZp
Y2F0aW9uCkdpdEh1YjogaHR0cHM6Ly90LmNvL1BaT25aSUhTTlIgI0RlZXBMZWFybmluZyAjY2xh
c3NpZmljYXRpb24gI01hY2hpbmVMZWFybmluZyAjZGVlcF9uZXVyYWxfbmV0d29ya3MgI0ltYWdl
X0NsYXNzaWZpY2F0aW9uICNUZXh0X0NsYXNzaWZpY2F0aW9uICNFbnNlbWJsZUxlYXJuaW5nlIzd
QSBsYWNrIG9mIHRyYW5zcGFyZW5jeSBpbiBBSSByZXNlYXJjaCBoYXMgbGVkIHRvIGFuIEFJIHJl
cGxpY2F0aW9uIGNyaXNpc+KAlGFuIGFkdmVydGlzZW1lbnQgZm9yIHRlY2hub2xvZ3kgc2hvdWxk
IG5vdCBiZSBtaXN0YWtlbiBmb3IgYSBzY2llbnRpZmljIHN0dWR5ICBodHRwczovL3QuY28vcXZH
ZXkwVlVZNiAjQklHREFUQSAjREFUQVNDSUVOQ0UgI01BQ0hJTkVMRUFSTklORyAjQUmUWCABAABH
bG9iYWwgUm9ib3RpYyBTaW11bGF0b3IgTWFya2V0IDIwMjAtMjAyNDogTWFya2V0IGlzIFBvaXNl
ZCB0byBHcm93IGJ5ICQ2MzMuOTcgTWlsbGlvbiDigJMgUiAKClJFQUQgTU9SRTogaHR0cHM6Ly90
LmNvL0REc0FyTEIxN3kKCiNBdXRvbWF0ZWRQcm9jZXNzZXMgI0F1dG9tYXRpb24gI0F1dG9tYXRp
b25UZWNobm9sb2d5ICNGdXR1cmUgI0dpYW50Um9ib3RzICNIdW1hbnMgI0ludGVsbGlnZW50TWFj
aGluZXMgI0phcGFuICNKb2JzICNNYWNoaW5lTGVhcm5pbmcgaHR0cHM6Ly90LmNvL0tyRVZKZWVm
UGyUjHtDaG9vc2luZyB0aGUgUmlnaHQgQUkgZm9yIFlvdXIgQnVzaW5lc3MgR29hbHMKCiNBSSAj
YnVzaW5lc3MgI01hY2hpbmVMZWFybmluZyAjQ3VzdG9tZXJFeHBlcmllbmNlIAoKaHR0cHM6Ly90
LmNvL0JnZGNSYmhXeFOUWBsBAABTUUxpdGUgMyAmYW1wOyBQeXRob24gVHV0b3JpYWxzIDogIzEg
Q3JlYXRpbmcgREIgJmFtcDsgRXN0YWJsaXNoIENvbm5lY3Rpb24uCgpodHRwczovL3QuY28vSGIw
WHNNOVVoMAoKI01hY2hpbmVMZWFybmluZyAjQUkgIzEwMERheXNPZkNvZGUgI0RFVkNvbW11bml0
eSAjSW9UICNmbHV0dGVyICNQeXRob24gI2phdmFzY3JpcHQgI1NlcnZlcmxlc3MgI3dvbWVuaW50
ZWNoICNjeWJlcnNlY3VyaXR5ICNSU3RhdHMgI0NvZGVOZXdiaWUgI0RhdGFTY2llbmNlIGh0dHBz
Oi8vdC5jby96a0g3OEVGb21UlIziTGVhcm4gbW9yZSBhYm91dCBvdXIgY29sbGFib3JhdGl2ZSAj
c29pbHN1cnZleSBwcm9qZWN0IHdpdGggRGVhbiBBbmdlbGEgQmVkYXJkIEhhdWdobiBhbmQgaGVy
IEBhZ2Jpb3VzYXNrIHNvaWxzIHRlYW0uIEZpcnN0IHNpdGUgc2FtcGxlZCB3YXMgI3N3YXRwYXJz
IGF0IE5haWNhbS4gQFVTYXNrSW5ub3ZhdGVzICNtYWNoaW5lbGVhcm5pbmcgI2FndGVjaCBodHRw
czovL3QuY28vREtERkZxdlJiVZSMSkEgZ29vZCBwcmltZXIgb24gI01hY2hpbmVMZWFybmluZyBh
bmQgaXRzIGZsYXZvcnMgIGh0dHBzOi8vdC5jby8xSGMxOG9lSkMzlIy+VGhyZWUgY2hlZXJzIGZv
ciAjcmVzcG9uc2libGVhaSAhIFJlc3BvbnNpYmxlIEFJIGJlY29tZXMgY3JpdGljYWwgaW4gMjAy
MSBodHRwczovL3QuY28vYzlIUFM2WGZmRiAjYWkgI0FydGlmaWNpYWxJbnRlbGxpZ2VuY2UgI01h
Y2hpbmVMZWFybmluZyAjZGVlcGxlYXJuaW5nICNhaWV0aGljcyBodHRwczovL3QuY28veExZTlZQ
S1llMZSMrkNvdWxkIHNvbWVvbmUgcGxlYXNlIGV4cGxhaW4gd2h5IFJpZGdlIGhhcyBDaXJjbGUg
Rm9ybSBhbmQgTGFzc28gaGFzIFNxdWFyZSBGb3JtIHdpdGggc2hhcnAgQ29ybmVycyDwn6SUCgpA
c2lkc2hhcm1hMTk5MCAjTWFjaGluZUxlYXJuaW5nICNEYXRhU2NpZW5jZSBodHRwczovL3QuY28v
c3QyUzB0MzdxbJSMvUdvb2dsZSB3YW50cyB5b3UgdG8gaGVscCB0cmFpbiBpdHMgQUkgYnkgbGFi
ZWxpbmcgaW1hZ2VzIGluIEdvb2dsZSBQaG90b3MgaHR0cHM6Ly90LmNvL3pMd0VsdUQyVWYgI2Fp
ICNBcnRpZmljaWFsSW50ZWxsaWdlbmNlICNNYWNoaW5lTGVhcm5pbmcgI2RlZXBsZWFybmluZyAg
I2dvb2dsZSBodHRwczovL3QuY28vb2lTYXZ4V3o2d5SMdFB5dGhvbiBXZWVrbHkgI01hY2hpbmVM
ZWFybmluZyAjYXJ0aWZpY2lhbGludGVsbGlnZW5jZSAjbGVhcm5pbmcgdmlhIGh0dHBzOi8vdC5j
by9rcEY2Y3R5Ymp2IGh0dHBzOi8vdC5jby9HOHFKdGVGdWxDlIxMTmV3IHRvcCBwb3N0IG9uIC9y
L01hY2hpbmVMZWFybmluZyEgaHR0cHM6Ly90LmNvL1ZDZG4zdUk5TjMgI01hY2hpbmVMZWFybmlu
Z5SMyUhlcmUgSXMgSG93IEdvb2dsZSBNYXkgVXNlIE1hY2hpbmUgTGVhcm5pbmcgRHVyaW5nIENy
YXdsaW5nIAoKI0FydGlmaWNpYWxJbnRlbGxpZ2VuY2UgI0FJICNNYWNoaW5lTGVhcm5pbmcgI1NF
TyAjTWFya2V0aW5nICNEaWdpdGFsTWFya2V0aW5nICNmbHV0dGVyICNERVZDb21tdW5pdHkgI2ph
dmFzY3JpcHQgCgpodHRwczovL3QuY28vYnNqeFBUSE0yQZRYAQEAAEFjY2VwdGVkIHBhcGVycyBp
biAiRW5jb250cm8gTmFjaW9uYWwgZGUgSW50ZWxpZ8OqbmNpYSBDb21wdXRhY2lvbmFsIChFTklB
QykgMjAyMCIgKDEvNCk6CgpBIE5vdmVsIFN0cmF0ZWd5IGZvciBTZWxlY3RpbmcgSW5kaXZpZHVh
bHMgaW4gTWFueSBvYmplY3RpdmUgQWxnb3JpdGhtcyB3aXRoIExvY2FsIFNlYXJjaCBBcHBsaWVk
IHRvIHRoZSBOZXR3b3JrIERlc2lnbiBQcm9ibGVtCgojYWlib3hsYWIgI01hY2hpbmVMZWFybmlu
ZyAjZW5pYWMgI0FJlIyhI2Rpc2luZm9ybWF0aW9uCgonQWN0b3JzIHdobyBwcm9kdWNlIGZhbHNl
IGluZm9ybWF0aW9uIHRlbmQgdG8gcHJlZmVyIHJlbWFpbmluZyBoaWRkZW4gYW5kIHdlIHVzZSB0
aGF0IGluIG91ciAoI01hY2hpbmVMZWFybmluZykgbW9kZWwuJwoKaHR0cHM6Ly90LmNvL1lXMDJW
dTY4UTmUWBYBAABWaWEgQEhpX1RlY2hUcmVuZHM6ICJCaWcgRGF0YSBJbiAjSGVhbHRoY2FyZSAy
MDIwLiIgaHR0cHM6Ly90LmNvL0lsNjRBWFByY28KCiNCaWdEYXRhIG1ha2luZyBhIGJpZyBpbXBh
Y3QgaW4gaGVhbHRoY2FyZToKCi1TdWNjZXNzIHdpdGggUGF0aWVudHMKLURpbGlnZW5jZSBpbiBD
YXJlCi1Mb3dlcmVkIENvc3RzCi1FZmZlY3RpdmUvRWZmaWNpZW50ICNNZWRpY2luZQotQWR2YW5j
ZWQgU2VjdXJpdHkKLU1vcmUgQXdhcmUgRG9jdG9ycwoKI0RhdGEgI1RlY2ggI01hY2hpbmVMZWFy
bmluZ5SMvjggV2F5cyBCYW5rcyBVc2UgQXJ0aWZpY2lhbCBJbnRlbGxpZ2VuY2UgYW5kIE1hY2hp
bmUgTGVhcm5pbmcgdG8gU2VydmUgWW91IEJldHRlciAKClJFQUQgTU9SRTogaHR0cHM6Ly90LmNv
L3o1Z3NtSzNTTnUKCiNBSSAjYWxnb3JpdGhtICNEZWVwTGVhcm5pbmcgI01hY2hpbmVMZWFybmlu
ZysgaHR0cHM6Ly90LmNvLzhORWs5WjJjSGqUjHVBenVyZSBTb2x1dGlvbiBJZGVhcyAjSW50ZXJu
ZXRPZlRoaW5ncyAjbGVhcm5pbmcgI21hY2hpbmVsZWFybmluZyB2aWEgaHR0cHM6Ly90LmNvL2JE
VGdCVUlXdEcgaHR0cHM6Ly90LmNvL3JrZVZLNHlHOUSUWDUBAABAQml0TWF4X09mZmljaWFsIEBU
cnlQbG90WCBQbGVhc2UgbGlzdCAkZ255IEBnbnlfaW8gCiRnbnkgbWFya2V0IGNhcCAkN20gI21h
Y2hpbmVsZWFybmluZyBhbmQgYWkgcHJlZGljdGl2ZSBwbGF0Zm9ybSBzaW5jZSAyMDE4IGl0IHdv
dWxkIGJlIGEgZ3JlYXQgYWRkaXRpb24gCuKtkO+4jyBodHRwczovL3QuY28vcXhENFBRNWlTYiAK
4q2Q77iPQXJ0aWNsZSB3aXRoICRHbnkgJmFtcDsgT2NlYW4gUHJvdG9jb2wgaHR0cHM6Ly90LmNv
L1p3bWU5QUFSOTUK4q2Q77iPTWFpbm5ldCB0aGlzIHdpbnRlcgokYWdpICRvY2VhbiAkZmV0ICRh
aSAjQWmUjK1OZXQgUHJvbW90aW5nIFNjb3JlIC0gI05QUzogd2hhdCBpcyB0aGlua2luZyBSaWNo
YXJkIE93ZW4sIGl0cyBjby1jcmVhdG9yLCBhYm91dCB0aGUgZnV0dXJlIG9mIHwgIEBNRVNsYXl0
ZXIgCgojTWFjaGluZUxlYXJuaW5nICNjdXN0b21lcmV4cGVyaWVuY2UgCgpodHRwczovL3QuY28v
YWtUMlpXZktid5SMeEJ5IDIwMjAsIDg1JSBvZiBjdXN0b21lciBpbnRlcmFjdGlvbnMgd2lsbCBi
ZSBoYW5kbGVkIHdpdGhvdXQgYSBodW1hbi4gfkdhcnRuZXIKI01hY2hpbmVMZWFybmluZyAjQXJ0
aWZpY2lhbEludGVsbGlnZW5jZZSMcFRoZSBQZW50YWdvbiBoYXMgcmV2YW1wZWQgdGhlaXIgZWZm
b3J0cyB3aXRoICNtYWNoaW5lbGVhcm5pbmcgYW5kIGEgZ2xvYmFsIHRyYW5zbGF0b3IuIAoKaHR0
cHM6Ly90LmNvL0RWcnZjN3l1bGmUWCMBAABUb3AgMjAgIERhdGFzZXRzIGZvciAjTWFjaGluZUxl
YXJuaW5nIGFuZCBTdGF0aXN0aWNzIFByb2plY3RzIHwgSW5mb2dyYXBoaWMKCmh0dHBzOi8vdC5j
by9oU0s2TG5KcnBEIHZpYSBARGF0YVNjaWVuY2VMCiNBSSAjRGF0YVNjaWVuY2UgI0JpZ0RhdGEK
Q2MgQE1hcnNoYUNvbGxpZXIgQGpibGVmZXZyZTYwIEBhbnRncmFzc28gQEpvbmF0aGFuQXVmcmF5
ICBAWW03ODIwMCBAa2FseWRlb28gQExvdWlzU2VyZ2UgQGNoYm91cnNpbiBAS2lya0RCb3JuZSBA
c2NobWFyem8gaHR0cHM6Ly90LmNvLzU2YUpoemVyRTCUjMlFcXVpdGFibGUgdGVjaDogQUktZW5h
YmxlZCBwbGF0Zm9ybSB0byByZWR1Y2UgYmlhcyBpbiBkYXRhc2V0cyByZWxlYXNlZCBodHRwczov
L3QuY28vU1lVZkduUFpuYyAjYWkgI0FydGlmaWNpYWxJbnRlbGxpZ2VuY2UgI01hY2hpbmVMZWFy
bmluZyAjZGVlcGxlYXJuaW5nICAjZGF0YSAjYmlhcyAjYWlldGhpY3MgaHR0cHM6Ly90LmNvL1hL
TU5lWDRSWFqUWBUBAABJbiAxOTUwcyAjYWxhbnR1cmluZyBleHBsYWluZWQgaW4gaGlzIHBhcGVy
IHRoYXQgY29tcHV0ZXJzIG1pZ2h0IG9uZSBkYXkgYmVjb21lIHNvIGdvb2QgYXQgaW1wZXJzb25h
dGluZyBodW1hbnMgdGhhdCBpdCB3b3VsZCBiZSBpbXBvc3NpYmxlIHRvIGRpc3Rpbmd1aXNoIHRo
ZW0uICNHUFQzIHNlZW1zIHRvIGJlIGdldHRpbmcgdGhlcmUuICNhcnRpZmljaWFsaW50ZWxsaWdl
bmNlICNtYWNoaW5lbGVhcm5pbmcgI2RlZXBsZWFybmluZyAjYWkgCmh0dHBzOi8vdC5jby9ydFRG
ZkhLSFRzlIzmQXJlIHJvYm90cyByaWdodCBmb3IgcmVzdGF1cmFudHM/IAoKUkVBRCBNT1JFOiBo
dHRwczovL3QuY28vVGpmaWJmeXUybgoKI0F1dG9tYXRlZFByb2Nlc3NlcyAjQXV0b21hdGlvbiAj
QXV0b21hdGlvblRlY2hub2xvZ3kgI0Z1dHVyZSAjR2lhbnRSb2JvdHMgI0h1bWFucyAjSW50ZWxs
aWdlbnRNYWNoaW5lcyAjSmFwYW4gI0pvYnMgI01hY2hpbmVMZWFybmluZ34gaHR0cHM6Ly90LmNv
Lzh0WEdWa2RwQnWUjPROb3ZlbCBkZWVwIGxlYXJuaW5nIG1ldGhvZCBlbmFibGVzIGNsaW5pYy1y
ZWFkeSBhdXRvbWF0ZWQgc2NyZWVuaW5nIGZvciBkaWFiZXRlcy1yZWxhdGVkIGV5ZSBkaXNlYXNl
IAoKUkVBRCBNT1JFOiBodHRwczovL3QuY28vMHREcmVFN1FpMwoKI0FJICNDb25uZWN0ZWREZXZp
Y2UgI0RlZXBMZWFybmluZyAjTWFjaGluZUxhbmd1YWdlICNNYWNoaW5lTGVhcm5pbmcgI1NtYXJ0
RGV2aWNlIGh0dHBzOi8vdC5jby8wZFQ2d3c5OEIwlFgjAQAAV291bGQgeW91IGxpa2UgdG8gdXNl
ICNkYXRhc2NpZW5jZSB0byBwcm90ZWN0IHlvdXIgYnJhbmQgaW50ZWdyaXR5LCBhbmQgcmVjYXB0
dXJlIGxvc3Qgc2FsZXM/IAoKT3VyIHBhdGVudGVkIGFwcHJvYWNoIGFwcGxpZXMgI21hY2hpbmVs
ZWFybmluZyBhbmQgY3Jvd2Rzb3VyY2VkIGluZm9ybWF0aW9uIGZyb20gZW5kIGN1c3RvbWVycy4g
CgpMZWFybiBtb3JlOiBodHRwczovL3QuY28vemRCNkJLUWgwRCAjYXBwYXJlbCAjSW9UICNpbm5v
dmF0aW9uICNDWCAjYnJhbmRzIGh0dHBzOi8vdC5jby9pOUhYQmo3TXVJlIy1VGhpcyB0cmFmZmlj
IGNhbWVyYSBzZWVzIGFsbCAoYW5kIHRoYXQncyBhIGdvb2QgdGhpbmcpIHZpYSBAWkROZXQgaHR0
cHM6Ly90LmNvL0xueklqWTZiMmsgI2FpICNBcnRpZmljaWFsSW50ZWxsaWdlbmNlICNNYWNoaW5l
TGVhcm5pbmcgI2RlZXBsZWFybmluZyAjdHJhZmZpYyBodHRwczovL3QuY28vbWd0dWZacHRYVZSM
lFlvdXIgQEFybXlSZXNlYXJjaExhYiAjUmVzZWFyY2hlcnMgY29sbGFib3JhdGUgd2l0aCBhY2Fk
ZW1pYSB0byBzYXZlIGxpdmVzLiBAVVNBcm15ICNTY2llbmNlU2F2ZXNMaXZlcyAjQVJPICNNYWNo
aW5lTGVhcm5pbmcgaHR0cHM6Ly90LmNvL3BVQ01lUkhVU1CUjIZBcHBsZSBHbGFzc2VzOiBUaGV5
J3JlIENvbWluZwpodHRwczovL3QuY28vVVpWU2hUT3p6QwoKQENpbmR5UG9tIEBBcHBsZSAKI0FJ
ICNBcnRpZmljaWFsSW50ZWxsaWdlbmNlICNEYXRhU2NpZW5jZSAjTUwgI01hY2hpbmVMZWFybmlu
Z5SM1EJyYWluIENvbXB1dGluZyBTdHVkeSBTaG93cyBIb3cgVG8gTWFrZSBNZXRhbHMgTWltaWMg
TmV1cm9ucyBodHRwczovL3QuY28vTG43SnpTQmdvTCAjREwgI0FJICNNTCAjRGVlcExlYXJuaW5n
ICAjQXJ0aWZpY2lhbEludGVsbGlnZW5jZSAjTWFjaGluZUxlYXJuaW5nICNDb21wdXRlclZpc2lv
biAjQXV0b25vbW91c1ZlaGljbGVzICNOZXVyb01vcnBoaWMgI1JvYm90aWNzlIz6U2VlIGhvdyB0
byB1c2UgYSBzaW1wbGUgd2ViIGNvbm5lY3RvciB0byBzY3JhcGUgY29udGVudCBmcm9tIHVuYXV0
aGVudGljYXRlZCB3ZWJwYWdlcywgY2FwdHVyZSBhdHRyaWJ1dGVzLCBhbmQgaW5nZXN0IHRoaXMg
Y29udGVudCBpbnRvIGFuIEFtYXpvbiBLZW5kcmEgaW5kZXggdXNpbmcgdGhlIGN1c3RvbSBkYXRh
IHNvdXJjZSBmZWF0dXJlLiAjRGF0YVNjaWVuY2UgI01hY2hpbmVMZWFybmluZyBodHRwczovL3Qu
Y28vVE8xSkpMSUl5MZSMz01hY2hpbmUtZGVzaWduZWQgbmF0dXJhbCBwcm9kdWN0IHN5bnRoZXNl
cyBwYXNzIOKAmFR1cmluZyB0ZXN04oCZIGZvciBjaGVtaXN0cnkgaHR0cHM6Ly90LmNvL1NGb2to
bEVhWFIgI2FpICNBcnRpZmljaWFsSW50ZWxsaWdlbmNlICNNYWNoaW5lTGVhcm5pbmcgI2RlZXBs
ZWFybmluZyAgI2NoZW1pc3RyeSAjc2NpZW5jZSBodHRwczovL3QuY28vODFDdmdON2FNMJRYFwEA
ACNDaGF0Ym90cyBhbmQgI1ZpcnR1YWxBc3Npc3RhbnRz4oCK4oCU4oCKQXV0b21hdGluZyB0aGUg
SW50ZXJuYWwgT3BlcmF0aW9uYWwgVGFza3MgaHR0cHM6Ly90LmNvL1FrcDlCMURjTm8gCiNjaGF0
Ym90cyAjbGVnYWxvcHMgI2xlZ2FsdGVjaCAjbGF3dGVjaCAjbGVnYWwgI2FpICNsYXdmaXJtICNs
ZWdhbGZpcm0gI2xhdyAjaW5ub3ZhdGlvbiAjaW50ZWxsaWdlbmNlICNpdCAjaXRzb2x1dGlvbnMg
I21hY2hpbmVsZWFybmluZyAjc29mdHdhcmUgI2xlZ2FsdGVjaG5vbG9neSAjZGlnaXRhbJSMleKP
ryAgQ2hlY2sgb3V0IGEgc2VyaWVzIG9mIHZpZGVvcyBhYm91dCAjQUkgYW5kICNNTCBvbiBASW50
ZXJTeXN0ZW1zRGV2LiAjSW50ZXJTeXN0ZW1zSVJJUyAjTWFjaGluZUxlYXJuaW5nICNXZWJpbmFy
ICZndDsmZ3Q7IGh0dHBzOi8vdC5jby9rNlk5eWhlalp0lFgcAQAAI0FJIGluICNQUjogVGhlIENv
bnZlcnNhdGlvbiBIYXMgSnVzdCBCZWd1biwgYnkgQE1hbnVlbGl0YU1fIHZpYSBASW5zdGl0dXRl
Rm9yUFIuIAoKI0FydGlmaWNpYWxJbnRlbGxpZ2VuY2UgJmFtcDsgI01hY2hpbmVMZWFybmluZyBo
YXZlIG1hbnkgYmVuZWZpdHPigJRhbmQgcmlza3MgbGlrZSAjbWlzaW5mb3JtYXRpb24gYW5kICNi
aWFzLiAqR3JlYXQgZm9yIHF1YW50aXRhdGl2ZSwgYnV0IGh1bWFucyBzdGlsbCBkbyBiZXR0ZXIg
cXVhbGl0YXRpdmVseS4gaHR0cHM6Ly90LmNvL1A4dHF1MDNQWjmUkEr+////hpRoBksBdYwKYXR0
cmlidXRlc5QpjAVtZXRhc5QoaBJLA4aUaBRLBIaUaBZdlIwCZW6UYYaUaBhdlIwCVVOUYYaUaBpL
AoaUaBxLAoaUaB5dlCiMEEBCaXRNYXhfT2ZmaWNpYWyUjA5ATWFyaWVhbXNhcmtpZZRlhpRoIF2U
KIwKQ3J5cHRvYypudJSMBmZsZXRjaJSMCWtub3dsZW5ncpSMFE1hcnlhbSBTYXJrafCfh6rwn4e5
lIwJQUlCb3ggTGFilIwOQWJkdWxSYXphcfCfkruUjBFQTUlDIEluY29ycG9yYXRlZJSMElBlbGFw
IEFubmXwn6aL8J+SlZSMFE5pZ2UgV2lsbHNvbiDwn4yN4pyMlIwRQXZpZGl0eSBTb2x1dGlvbnOU
jAhSZWNvTWluZJSMCVF1YWxldGljc5SMEU9wZW4gRGF0YSBTY2llbmNllIwRU3VoYXMgTWFoaW5k
cmFrYXKUjCNUeXNvbiBMZXN0ZXIsIENoSEPCriwgUkVCQ8KuLCBSSFXCrpSMD0d1c3Rhdm8gU2V2
aWxsYZSMG1NhcmEgTG92ZXMyTGVhcm4g4p2k77iP8J+TmpSMDElBTSBQbGF0Zm9ybZSMDUNvcnkg
V2lsbG5lc3OUjBhBaVNlYXIuY2ggOiBBSStEaXJlY3RvcnmUjA9LYXRobGVlbiBEZWxhbm+UjBRF
YXN5QXNrIFRlY2hub2xvZ2llc5SMCENocmlzdG9zlIwRbmVsbGlzdGVyIGNoYXJsZXOUjA1NYXR0
aGV3IFJlbnpllIwNRGVlcF9Jbl9EZXB0aJSMJkZyYW5jaXNjbyBKYXZpZXIgQXJjZW/wn4ey8J+H
vfCfh7rwn4e4lIwLQXNpZiBSYXp6YXGUjAlBYnN0cmFjdGGUjCxZb3JrIFVuaXZlcnNpdHkgU2No
b29sIG9mIENvbnRpbnVpbmcgU3R1ZGllc5SMB1JDaGlsbGmUjAppcGZjb25saW5llIwMTmV1ckF1
dG9tYXRhlIwSU3RydXR0dXJhRmluZSB8IHBslIwJQ29kZSBHZWVrlIwLUlNTIEdsYXNnb3eUjAVO
ZWNpb5SMDUNRRiBJbnN0aXR1dGWUjA5JbmRlbGxpZW50IEluY5SMCEtMU1QgVVNBlIwyS2VpdGgg
R29ybWV6YW5vIC0gI1RvcCAxMDAgI1F1aWNrQm9va3MgI1Byb0Fkdmlzb3KUjBNGYWJyaXppbyBC
dXN0YW1hbnRllIwPQnJpYW4gRS4gVGhvbWFzlIwJQnVycmVsbGVzlIwTVGhlIE5ldHdvcmsgQ29t
cGFueZSMEU1hZ25pbWluZCBBY2FkZW15lIwSR29mb3J0aCBTY2llbnRpZmljlIwGUmFzaGFklIwP
SGFzaGVtIEFidUJha2VylIwTTWVkaWNhbCBpUGhvbmUgQXBwc5SMDEdhc3BlciBCZWd1c5SME0ly
ZW5lIGF0IFNhdWdhVGFsa3OUjA9Sb25hbGQgdmFuIExvb26UjA5LYW1yYW4gS293c2FyaZSMDkth
c2hpZiBNYW56b29ylIwUSm9uYXRoYW4gQXVmcmF5IPCfmoCUjApSaW1haCBIYXJilIwMR3JhYmFu
Y2lqYcWhlIwPRGF2aWQgQXJha2VseWFulIwGS0xvQm90lIwOQ2hyaXMgUmlnYXR1c2+UjAhFVlJZ
VEhOR5SMD1RlY2hub2xvZ3kgTmV3c5SMDUNodWNrIFJ1c3NlbGyUjB1OaWtvbGFzIEFkYWxvZ2xv
dSAoYmxhY2swMDE3KZSMBUFzdXVulIwQR2l1bGlhbm8gTGlndW9yaZSMBEFsaWGUjCxTYW5qYXkg
S2FscmEgfCBEaWdpdGFsIFRyYW5zZm9ybWF0aW9uIFNoZXJwYZSMCEtlamlNYXJ0lIwMQnJlbmRh
biBCYWJilIwUU291cmFiaCBTaW5naCBLYXRvY2iUjA1OZWlsIENhbXBiZWxslIwOQm9iIENhcnZl
ciDinK2UjAtQYXVsIEhlY3RvcpSMD01lbGlzc2EgRnJlaXRhc5SMC1NhamlkIE1pcnphlIwQQW5k
cmVzIFZpbGFyacOxb5RlhpRoIksDhpRoJEsChpRoJksChpRoKEsChpRoKksChpRoLEsChpRoLl2U
KIwFRmFsc2WUjARUcnVllGWGlGgwSwKGlGgySwKGlGg0XZQojA9AUGVkZXJvdnNraTE5OTCUjApA
ZmxldGNoX2FplIwKQGtub3dsZW5ncpSMDkBNYXJpZWFtc2Fya2lllIwJQEFpYm94TGFilIwKQE9t
b0FiZHVsMZSMB0BQTUlDVVOUjApAQW5uZVBlbGFwlIwMQG5pZ2V3aWxsc29ulIwMQEF2aWRpdHlO
ZXdzlIwMQHJlY29taW5kX2lvlIwKQHF1YWxldGljc5SMBUBvZHNjlIwQQE1haGluZHJha2FyU19J
TpSMDEBUeXNvbkxlc3RlcpSMDEBHc2V2aWxsYVRlY5SMDEBTYXJhSGFua3MxNpSMDUBJQU1fX05l
dHdvcmuUjAxAQ3JvcFByb0NvcnmUjApAYWlzZWFyX2NolIwLQGtkZWxhbm8wMDGUjAtARWFzeUFz
a0luY5SMCkBDQm91Z2FuaXOUjAtATmVsbGlzdGVyQ5SMDUBNYXR0aGV3UmVuemWUjA5ARGVlcF9J
bl9EZXB0aJSMEEBmcmFuY2lzY29qYXJjZW+UjA9AYXNpZnJhenphcTE5ODiUjAxAQWJzdHJhY3Rh
VVOUjA9AQ29udGludWVfWW9ya1WUjAhAUkNoaWxsaZSMDEBpcGZjb25saW5lMZSMDUBOZXVyQXV0
b21hdGGUjA5Ac3RydXR0dXJhZmluZZSMC0Bjb2RlZ2Vla2F6lIwMQFJTU0dsYXNnb3cxlIwLQE5l
Y2lvX25ld3OUjA1AQ1FGSW5zdGl0dXRllIwLQEluZGVsbGllbnSUjAhAS0xTVEluY5SMDUBkcnF1
aWNrYm9va3OUjBBARmFicml6aW9idXN0YW1hlIwNQERpdmVyZ2VudENJT5SMDEBCdXJyZWxsZXNV
U5SMCUB0aGVuZXRjb5SMC0BNYWduaW1pbmRBlIwLQEdvZm9ydGhTY2mUjAtAUlBfTE1TUEFDRZSM
CUBoYXNoZW0yNZSMDkBNZWRpY2FsaVBob25llIwMQGJlZ3VzZ2FzcGVylIwJQGx5YWtvdmV0lIwP
QFJvbmFsZF92YW5Mb29ulIwOQEthbXJhbktvd3NhcmmUjA5Aa2FzaGlmbWFuem9vcpSMD0BKb25h
dGhhbkF1ZnJheZSMCkBIYXJiUmltYWiUjAxAZ3JhYmFuY2lqYXOUjBBARGF2aWRBcmFrZWx5YTEz
lIwJQEtMb0JvdEFJlIwKQGNyaWdhdHVzb5SMCUBFVlJZVEhOR5SMDkBUZWNoZnV0dXJlbmV3lIwQ
QGlhbUNodWNrUnVzc2VsbJSMC0BuYWRhbG9nbG91lIwLQGFzdXVuX2luZm+UjAtAaW5nbGlndW9y
aZSMC0BBTElBU29jaWFslIwMQHNhbmpheWthbHJhlIwJQGtlamltYXJ0lIwMQGJyZW5kYW5iYWJi
lIwPQFNvdXJhYmhTS2F0b2NolIwQQFNoYW1lbGVzc0hlYW5leZSMEEBjeWJlcnNlY2JvYXJkcm2U
jAhAS2ltUGdjaJSMDEBNZWxpTGluZGFoX5SMC0BzYWppZG1pcnphlIwPQGFuZHJlc3ZpbGFyaW5v
lGWGlHSUjApjbGFzc192YXJzlCl1YmF1Lg==
</properties>
		<properties format="pickle" node_id="2">gASVtwAAAAAAAAB9lCiMEmNvbnRyb2xBcmVhVmlzaWJsZZSIjBNzYXZlZFdpZGdldEdlb21ldHJ5
lENCAdnQywADAAAAAAEgAAAAVQAABKUAAAJoAAABIQAAAHQAAASkAAACZwAAAAAAAAAABVYAAAEh
AAAAdAAABKQAAAJnlIwOc2VsZWN0ZWRfd29yZHOUj5SMC3dvcmRzX2NvbG9ylIiMCndvcmRzX3Rp
bHSUSwCMC19fdmVyc2lvbl9flEsBdS4=
</properties>
		<properties format="pickle" node_id="3">gASV6wIAAAAAAAB9lCiMCmF1dG9jb21taXSUiIwSY29udHJvbEFyZWFWaXNpYmxllIiME3NhdmVk
V2lkZ2V0R2VvbWV0cnmUQ0IB2dDLAAMAAAAAAloAAAAwAAAFTwAAAkMAAAJbAAAATwAABU4AAAJC
AAAAAAAAAAAFVgAAAlsAAABPAAAFTgAAAkKUjA5zdG9yZWRzZXR0aW5nc5R9lCiMBG5hbWWUjACU
jA1wcmVwcm9jZXNzb3JzlF2UKIwUcHJlcHJvY2Vzcy50cmFuc2Zvcm2UfZSMB21ldGhvZHOUXZQo
SwBLA2VzhpSME3ByZXByb2Nlc3MudG9rZW5pemWUfZQojAZtZXRob2SUSwSMB3BhdHRlcm6UjANc
dyuUdYaUjBFwcmVwcm9jZXNzLmZpbHRlcpR9lCiMA2VuZJRHP+zMzMzMzM2MC2ludmFsaWRhdGVk
lImMCGxhbmd1YWdllIwHRW5nbGlzaJSMB2x4X2xpc3SUXZSMB2x4X3BhdGiUTowHbWV0aG9kc5Rd
lChLAEsCZYwIbl90b2tlbnOUS2SMB3BhdHRlcm6UjAggKD8hQCkuK5SMBXN0YXJ0lEc/uZmZmZmZ
mowHc3dfbGlzdJRdlIweb3Jhbmdld2lkZ2V0LnV0aWxzLmZpbGVkaWFsb2dzlIwKUmVjZW50UGF0
aJSTlCmBlH2UKIwHYWJzcGF0aJSMM0M6L1VzZXJzL0doYWRhL0RvY3VtZW50cy80w6ltZSBJbmZv
L0FpL1RQL2NvdWxkLnR4dJSMBnByZWZpeJROjAdyZWxwYXRolE6MBXRpdGxllGgIjAVzaGVldJRo
CIwLZmlsZV9mb3JtYXSUTnViYYwHc3dfcGF0aJRoKnWGlIwUcHJlcHJvY2Vzcy5ub3JtYWxpemWU
fZSGlGg1fZSGlGgWfZSGlIwRcHJlcHJvY2Vzcy5uZ3JhbXOUfZSGlIwHdGFnLnBvc5R9lIaUZXWM
C19fdmVyc2lvbl9flEsCdS4=
</properties>
	</node_properties>
	<session_state>
		<window_groups />
	</session_state>
</scheme>
